#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Test

on:
  release:
    types: [published]
  repository_dispatch:
    types: [docker-test, docker-inc-test]
  push:
    paths-ignore:
    - README.md
    - LICENSE

#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: [started]

env:
  SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}

jobs:
  docker-build-test:
    runs-on: ubuntu-18.04
    env:
      USERNAME: ${{secrets.docker_username}}
      PASSWORD: ${{secrets.docker_password}}
      IMAGE_NAME: ${{secrets.docker_username}}/test
      IMAGE_TAG: latest
      CONTEXT: ./
      DOCKERFILE: Dockerfile
      BUILD_ARGS: ''

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest

    - name: Configure docker
      run: |
        . docker.sh
        configure_docker
        login_to_registry

    - name: First stage
      run: |
        . docker.sh
        build_image first-stage

    - name: Second stage
      run: |
        . docker.sh
        build_image second-stage

    - name: Third stage 1 - Fail
      id: stage_1
      run: |
        echo "::set-output name=started::yes"
        . docker.sh
        build_image third-stage-1

    - name: Third stage 2 - Success
      if: failure() && steps.stage_1.outputs.started == 'yes'
      id: stage_2
      run: |
        echo "::set-output name=started::yes"
        . docker.sh
        build_image third-stage-2

    - name: Third stage 3 - Append file
      id: stage_3
      run: |
        echo "::set-output name=started::yes"
        . docker.sh
        build_image third-stage-3

    - name: Push docker cache
      if: (!cancelled()) && !(failure() && github.event_name == 'repository_dispatch' && github.event.client_payload.disable_push_when_fail == true)
      run: |
        . docker.sh
        push_image

    - name: Copy out files
      id: copyfile
      if: (!cancelled())
      run: |
        . docker.sh
        copy_files firstfile "$(pwd)/firstfile"
        echo "File content:"
        cat "$(pwd)/firstfile" 
        echo "::set-output name=status::success"

    - name: Upload file
      uses: actions/upload-artifact@master
      if: steps.copyfile.outputs.status == 'success' && !cancelled()
      with:
        name: firstfile
        path: firstfile

    - name: SSH connection to Actions
      if: failure() || (github.event_name == 'repository_dispatch' && github.event.client_payload.debug == true)
      uses: tete1030/debugger-action@my

  docker-build-inc-test:
    runs-on: ubuntu-18.04
    needs: docker-build-test
    if: github.event_name != 'repository_dispatch' || github.event.action == 'docker-inc-test'
    env:
      USERNAME: ${{secrets.docker_username}}
      PASSWORD: ${{secrets.docker_password}}
      IMAGE_NAME: ${{secrets.docker_username}}/test
      IMAGE_TAG: latest
      CONTEXT: ./
      DOCKERFILE: Dockerfile-inc
      NO_REMOTE_CACHE: 1
      INLINE_CACHE: 1
      NO_PUSH: 1
      BUILD_ARGS: 'IMAGE_BASE'

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest

    - name: Configure docker
      run: |
        . docker.sh
        configure_docker
        login_to_registry

    - name: First stage
      run: |
        . docker.sh
        build_image first-stage

    - name: Second stage
      run: |
        . docker.sh
        build_image second-stage

    - name: Third stage
      run: |
        . docker.sh
        build_image third-stage

    - name: Copy out files
      id: copyfile
      if: (!cancelled())
      run: |
        . docker.sh
        copy_files firstfile "$(pwd)/firstfile"
        echo "File content:"
        cat "$(pwd)/firstfile" 
        echo "::set-output name=status::success"

    - name: Upload file
      uses: actions/upload-artifact@master
      if: steps.copyfile.outputs.status == 'success' && !cancelled()
      with:
        name: firstfile
        path: firstfile

    - name: SSH connection to Actions
      if: failure() || (github.event_name == 'repository_dispatch' && github.event.client_payload.debug == true)
      uses: tete1030/debugger-action@my
